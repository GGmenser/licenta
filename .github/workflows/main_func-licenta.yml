name: Build and deploy Node.js project to Azure Function App - func-licenta

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./api" # folderul cu host.json
  NODE_VERSION: "18.x" # recomandat pentru Functions v4

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json"

      - name: Install (prod)
        run: npm ci --omit=dev

      - name: Create zip artifact (host.json in root of zip)
        run: |
          cd $GITHUB_WORKSPACE/${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r $GITHUB_WORKSPACE/release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_293FBADD1AE74FA0AC096B8FAD2A3D8B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DD24A982B14A401FB3F3941A33074B38 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D6D02FBED4CF43C6AC4B761A0908057B }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: "func-licenta"
          package: "release.zip" # depune direct zip-ul corect
          scm-do-build-during-deployment: false
